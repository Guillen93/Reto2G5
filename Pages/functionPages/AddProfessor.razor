@page "/professor/add"

@using System.ComponentModel.DataAnnotations
@using Reto2G5.Enum;
@using Reto2G5.Helpers;
@using Reto2G5.Interfaces;
@using Reto2G5.Model;
@using Reto2G5.componets;
@using System.Text.Json;
@using System.Text.Json.Serialization;
@using System.Net;
@using System.Text;

@inject HttpClient Http
@inject IJSRuntime JSRuntime
@inject NavigationManager NavManager
@using System.Net.Http.Headers;


<div >


<div class="container">
    <div class="row align-items-start">
        <div class="col"> </div>

        <div class="col"> </div>
    </div>
    <div class="row align-items-center">
        <div class="col"></div>
        <div class="col">
            <h3>Añadir Profesor</h3>
                <EditForm Model=professorCreate >
                    <DataAnnotationsValidator />

                    <div>
                        <p>
                            <label for="id">User_Dni:</label>
                            <InputText @bind-Value=professorCreate.dni id="id" class="form-control" size=40 style="width:500px " />
                            <ValidationMessage For=@(()=>professorCreate.dni) />
                        </p>
                    </div>

                    <div>
                        <p>
                            <label for="password">PassWord:</label>
                            <InputText @bind-Value=professorCreate.password id="password" type=@tipo class="form-control" size=40 style="width:500px" />
                            <ValidationMessage For=@(()=>professorCreate.password) />
                        </p>
                        <p>
                            <button class="btn btn-outline-secondary" type="button" @onclick="mostrarPass">
                                mostrar
                            </button>
                        </p>
                    </div>
                    <div>
                        <p>
                            <label for="nombre">Nombre:</label>
                            <InputText @bind-Value=professorCreate.name id="nombre" class="form-control" size=40 style="width:500px " />
                            <ValidationMessage For=@(()=>professorCreate.name) />
                        </p>
                    </div>
                     <div>
                        <p>
                            <label for="apellido">Apellido:</label>
                            <InputText @bind-Value=professorCreate.surname id="apellido" class="form-control" size=40 style="width:500px " />
                            <ValidationMessage For=@(()=>professorCreate.surname) />
                       </p>
                    </div>
                    <div>
                        <p>
                            <label for="email">Email:</label>
                            <InputText @bind-Value=professorCreate.email id="email" class="form-control" size=40 style="width:500px " />
                            <ValidationMessage For=@(()=>professorCreate.email) />
                        </p>
                    </div>
                    <div>
                        <p>
                            <label for="nacionalidad">Nacionalidad:</label>
                            <InputSelect class="form-select" @bind-Value="professorCreate.nationality" >
                                <option value="" selected>Elige tu pais:</option>
                                @foreach (var pais in Nationalities)
                                {
                                    <option value="@pais.countryName">@pais.countryName</option>
                                }

                            </InputSelect>
                        </p>
                    </div>
                    <div>
                        <p>
                            <label for="adress">Direccion:</label>
                            <InputText @bind-Value=professorCreate.addres id="adress" class="form-control" size=40 style="width:500px " />
                            <ValidationMessage For=@(()=>professorCreate.addres) />
                        </p>
                    </div>

                    <div class="row align-items-end">
                        <div class="col"></div>
                        <div class="col">
                            <button class="btn btn-danger" style="width:150px" @onclick="createUser">Añadir profesor</button>
                        </div>
                        <div class="col"></div>
                    </div>
                </EditForm>
            </div>
        <div class="col"> </div>
            <p>@errorMessage</p>

    </div>

</div>

</div>


@code {
    [Inject]
    private ILocalStorage localStorage { get; set; }
    UserResponse userLocal = new UserResponse();
    string tipo = "password";
    public bool DeleteDialogOpen { get; set; }
    UserRequest userRequest = new UserRequest();
    ProfessorRequest professorRequest = new ProfessorRequest();
    ProfessorCreate professorCreate = new ProfessorCreate();
    private string selectedNationality;
    private Pais[] Nationalities;

    String errorMessage;

    protected override async Task OnInitializedAsync()
    {
        userLocal = IsDataNull.CreateInstanceIFIsNull<UserResponse>(await localStorage.GetValue<UserResponse>(ValuesKeys.Objeto));

        Nationalities = await Http.GetFromJsonAsync<Pais[]>("json/paises.json");

    }






    async Task createUser()
    {

        userRequest.dni = professorCreate.dni;
        userRequest.password = professorCreate.password;
        userRequest.roleId = 2;

        HttpResponseMessage response = await Http.PostAsJsonAsync<UserRequest>(Endpoints.CreateUsers(), userRequest);

        if (response.IsSuccessStatusCode)
        {
            Console.WriteLine("usuario Creado");

        }
        else
        {
            if (((int)response.StatusCode) == 401)
            {
                errorMessage = "no puede hacer eso";
            }
            if (((int)response.StatusCode) == 409)
            {
                errorMessage = "usuario ya registrado";
            }
            else
            {
                errorMessage = "Something went wrong";
            }
        }

        professorRequest.professorDni = professorCreate.dni;
        professorRequest.name = professorCreate.name;
        professorRequest.surname = professorCreate.surname;
        professorRequest.email = professorCreate.email;
        professorRequest.nationality = selectedNationality;
        professorRequest.addres = professorCreate.addres;

        HttpResponseMessage responseP = await Http.PostAsJsonAsync<ProfessorRequest>(Endpoints.CreateProfessor(), professorRequest);

        if (responseP.IsSuccessStatusCode)
        {

            eMailModel mail = new eMailModel();
            mail.recipient = professorCreate.email;
            mail.subject = "Creacion de Usuario";
            mail.msgBody = " Bienvenidal al sistema " + professorCreate.name + "\n Su cuenta ha sido creada con exito.\n en breve recibira confirmacion de la activacion de su cuenta.";

            string sendMail = "http://localhost:8082/api/sendMail";
            HttpClient HttpClP = new HttpClient();
            var responseMP = await HttpClP.PostAsJsonAsync<eMailModel>(sendMail, mail);


            if (responseMP.IsSuccessStatusCode)
            {
                Console.WriteLine("EMail enviado");
                NavManager.NavigateTo("/fetchProfessordetails");
            }
            else
            {
                Console.WriteLine("Something went wrong");
            }

           



        }
        else
        {
            if (((int)responseP.StatusCode) == 401)
            {
                errorMessage = "no puede hacer eso";
            }
            if (((int)responseP.StatusCode) == 409)
            {
                errorMessage = "usuario ya registrado";
            }
            else
            {
                errorMessage = "Something went wrong";
            }
        }

    }
    private void mostrarPass()
    {

        if (tipo == "password")
        {
            tipo = "text";
        }
        else
        {
            tipo = "password";
        }
    }

    public class Pais
    {
        public string countryName { get; set; }
        public string population { get; set; }
        public string capital { get; set; }
        public string continentName { get; set; }
    }
}