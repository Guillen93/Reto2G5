@using Reto2G5.Enum;
@using Reto2G5.Helpers;
@using Reto2G5.Interfaces;
@using Reto2G5.Model;
<div class="top-row ps- navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Reto2G5</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        @if (logeado==true)
        {
            Console.WriteLine("logeado " + logeado);
            <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                    <span class="oi oi-home" aria-hidden="true"></span> LOGOUT
            </NavLink>
        </div>
        
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="/fetchProfessordetails">
                <span class="oi oi-plus" aria-hidden="true"></span> PROFESORES
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="/fetchstudentdetails">
                    <span class="oi oi-plus" aria-hidden="true"></span>STUDENTS
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="/fetchuserdetails">
                    <span class="oi oi-plus" aria-hidden="true"></span> USERS
            </NavLink>
        </div>
        
      
         }
    </nav>
</div>

@code {
    [Inject]
    private ILocalStorage localStorage { get; set; }
    UserResponse userLocal = new UserResponse();
    private bool logeado=false;
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private async void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
        logeado =await Logged();
        Console.WriteLine("has llamado "+logeado);
    }
    private async Task<bool> Logged()
    {
        userLocal = IsDataNull.CreateInstanceIFIsNull<UserResponse>(await localStorage.GetValue<UserResponse>(ValuesKeys.Objeto));
        if (userLocal.accessToken != null)
        {
           return true;
        }
        else
        {
            return false;
        }


    }


}
